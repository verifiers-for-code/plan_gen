<prompt>
def capitalize_words_with_multiple_conditions_and_substrings_case_insensitive(string: str, prefixes: list, suffixes: list, substrings: list) -> str: """ Capitalizes words that start with any of the specified prefixes, end with any of the specified suffixes, or contain any of the specified substrings in the input string. Converts all other words to lowercase. The comparison is case-insensitive. >>> capitalize_words_with_multiple_conditions_and_substrings_case_insensitive("hello world apple orange", ["Ap"], ["Le"], ["ra"]) 'hello world Apple Orange' >>> capitalize_words_with_multiple_conditions_and_substrings_case_insensitive("python is fun to code", ["is", "to"], ["fun"], ["py"]) 'python Is Fun To code' >>> capitalize_words_with_multiple_conditions_and_substrings_case_insensitive("i love coding in python", ["i", "in"], ["ing"], ["py", "cod"]) 'I Love Coding In python' """
</prompt>
<canonical_solution>
```python def capitalize_words_with_multiple_conditions_and_substrings_case_insensitive(string, prefixes, suffixes, substrings): """ Capitalizes words that start with any of the specified prefixes, end with any of the specified suffixes, or contain any of the specified substrings in the input string. Converts all other words to lowercase. The comparison is case-insensitive. Parameters: string (str): The input string. prefixes (list): The list of prefixes to search for. suffixes (list): The list of suffixes to search for. substrings (list): The list of substrings to search for. Returns: str: The new string with words that meet the specified conditions capitalized and all other words lowercase. """ words = string.split() new_words = [] for word in words: lowercase_word = word.lower() if any(lowercase_word.startswith(prefix.lower()) for prefix in prefixes) or any(lowercase_word.endswith(suffix.lower()) for suffix in suffixes) or any(substring.lower() in lowercase_word for substring in substrings): new_word = word.capitalize() else: new_word = word.lower() new_words.append(new_word) new_string = " ".join(new_words) return new_string # Example usage print(capitalize_words_with_multiple_conditions_and_substrings_case_insensitive("hello world apple orange", ["Ap"], ["Le"], ["ra"])) # Output: hello world Apple Orange ```
</canonical_solution>